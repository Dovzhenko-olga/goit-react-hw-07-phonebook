{"version":3,"sources":["components/PhoneBook/PhoneBook.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","App.module.css","components/Container/Container.js","components/Section/Section.js","redux/contacts/contact-actions.js","services/contact-api.js","redux/contacts/contact-operations.js","redux/contacts/contact-selectors.js","components/Form/Form.js","components/PhoneBook/PhoneBook.js","components/Filter/Filter.js","components/Modal/Modal.js","App.js","redux/contacts/contact-reduser.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","changeFilter","createAction","fetchContacts","a","axios","get","data","addContacts","name","number","contact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","contactAPI","contacts","addContact","getValue","state","filter","getContacts","getIsLoading","isLoading","filteredContacts","createSelector","normalizedSearch","toLowerCase","includes","Form","onShowModal","useState","setName","setNumber","useSelector","contactSelectors","dispatch","useDispatch","handleChange","e","target","value","reset","useEffect","contactOperations","form","onSubmit","preventDefault","some","type","placeholder","input","pattern","required","onChange","button","PhoneBook","length","list","map","id","item","onClick","Filter","search","contactActions","modalRoot","document","querySelector","Modal","onClose","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","backdrop","currentTarget","content","App","showModal","setShowModal","toggleModal","modalButton","createReducer","fulfilled","_","payload","pending","rejected","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReduser","devTools","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.934584d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneBook_list__4pDST\",\"item\":\"PhoneBook_item__1Aw5Y\",\"button\":\"PhoneBook_button__1brmO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__fp6SZ\",\"title\":\"Filter_title__3trE2\",\"input\":\"Filter_input__2bj6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__306j5\",\"title\":\"Section_title__2YfQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__10Iln\",\"content\":\"Modal_content__tPSuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lxeQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalButton\":\"App_modalButton__2_kQC\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) =>\r\n  <div className={styles.container}>{children}\r\n  </div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (  \r\n  <div className={styles.section}>\r\n    <span className={styles.title}>{title}</span>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;","// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n// export const fetchContactsRequest = createAction('contact/fetchContactsRequest');\r\n// export const fetchContactsSuccess = createAction('contact/fetchContactsSuccess');\r\n// export const fetchContactsError = createAction('contact/fetchContactsError');\r\n\r\n// export const addContactsRequest = createAction('contact/addContactsRequest');\r\n// export const addContactsSuccess = createAction('contact/addContactsSuccess');\r\n// export const addContactsError = createAction('contact/addContactsError');\r\n\r\n// export const deleteContactsRequest = createAction('contact/deleteContactsRequest');\r\n// export const deleteContactsSuccess = createAction('contact/deleteContactsSuccess');\r\n// export const deleteContactsError = createAction('contact/deleteContactsError');","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContacts({ name, number }) {\r\n  const contact = { name, number };\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  return await axios.delete(`/contacts/${contactId}`);\r\n}","import * as contactAPI from 'services/contact-api';\r\n// import * as contactActions from './contact-actions';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// export const fetchContacts = () => async dispatch => {\r\n//   dispatch(contactActions.fetchContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await contactAPI.fetchContacts();\r\n//   dispatch(contactActions.fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(contactActions.fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contact/fetchContacts',\r\n  async () => {\r\n    const contacts = await contactAPI.fetchContacts();\r\n    return contacts;\r\n  }\r\n)\r\n\r\n// export const addContact = (data) => async dispatch => {\r\n//   dispatch(contactActions.addContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await contactAPI.addContacts(data);\r\n//   dispatch(contactActions.addContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(contactActions.addContactsError(error));\r\n//   }\r\n// };\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contact/addContact',\r\n  async (data) => {\r\n    const contacts = await contactAPI.addContacts(data);\r\n    return contacts;\r\n  }\r\n)\r\n  \r\n// export const deleteContact = contactId => async dispatch => {\r\n//   dispatch(contactActions.deleteContactsRequest());\r\n\r\n//   try {\r\n//     await contactAPI.deleteContact(contactId);\r\n//     dispatch(contactActions.deleteContactsSuccess(contactId));\r\n//   } catch (error) {\r\n//     dispatch(contactActions.deleteContactsError(error));\r\n//   }\r\n// }\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contact/deleteContact',\r\n  async (contactId) => {\r\n    await contactAPI.deleteContact(contactId);\r\n    return contactId;\r\n  }\r\n)","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getValue = state => state.contact.filter;\r\nexport const getContacts = state => state.contact.contacts;\r\nexport const getIsLoading = state => state.contact.isLoading;\r\n\r\nexport const filteredContacts = createSelector(\r\n  [getContacts, getValue],\r\n  (contacts, filter) => {\r\n    const normalizedSearch = filter.toLowerCase();\r\n\r\n    return contacts.filter(({name}) =>\r\n      name.toLowerCase().includes(normalizedSearch));\r\n  },\r\n);\r\n\r\n// export const filteredContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getValue(state);\r\n//   const normalizedSearch = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({name}) =>\r\n//     name.toLowerCase().includes(normalizedSearch));\r\n// }\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {contactOperations, contactSelectors } from 'redux/contacts';\r\nimport styles from './Form.module.css';\r\n\r\n\r\nfunction Form({onShowModal}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n       onShowModal(name);\r\n      // alert(`${name} already in contacts. Rewrite number?`);\r\n      reset();\r\n      return;\r\n      }\r\n    dispatch(contactOperations.addContact({name, number}));\r\n    reset();\r\n  };\r\n\r\n  useEffect(() => dispatch(contactOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        <p className={styles.name}>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          className={styles.input}\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        </label>\r\n        <label>\r\n          <p className={styles.name}>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter number\"\r\n            value={number}\r\n            className={styles.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n      <button className={styles.button} type=\"submit\">Add contact</button>\r\n    </form>\r\n    )\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: contact => dispatch(addContact(contact)),\r\n// })\r\n \r\nexport default Form;","import { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './PhoneBook.module.css';\r\nimport { contactSelectors, contactOperations } from 'redux/contacts';\r\n\r\nconst PhoneBook = () => {\r\n\r\n  const isLoading = useSelector(contactSelectors.getIsLoading);\r\n  const contacts = useSelector(contactSelectors.filteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = contactId => {\r\n    dispatch(contactOperations.deleteContact(contactId))\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {isLoading && <h2>Loading...</h2>}\r\n    {contacts.length > 0 && (\r\n      <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.item} key={id}>\r\n          <span>{name}:</span> <span>{number}</span>\r\n          <button className={styles.button} onClick={() => { onDeleteContact(id) }}>Delete</button>\r\n        </li>\r\n      ))}\r\n        </ul>\r\n    )}\r\n    </>\r\n    )\r\n};\r\n\r\nexport default PhoneBook;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactSelectors, contactActions } from 'redux/contacts';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactSelectors.getValue);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(contactActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={styles.search}>\r\n      <span className={styles.title}>\r\n        Find contacts by name\r\n      </span>\r\n      <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\n\r\nexport default Filter;","import { useEffect } from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({onClose, children}) {\r\n\r\n  const handleKeyDown = e => {\r\n       if (e.code === 'Escape') {\r\n         onClose();\r\n       }\r\n   }\r\n   \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  \r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n   return createPortal(\r\n      <div className={styles.backdrop} onClick={handleBackdropClick}>\r\n        <div className={styles.content}>{children}</div>\r\n      </div>, modalRoot\r\n    );\r\n  }","import { useState } from 'react';\r\nimport Container from './components/Container';\r\nimport Section from './components/Section';\r\nimport Form from './components/Form';\r\nimport PhoneBook from './components/PhoneBook';\r\nimport Filter from './components/Filter';\r\nimport Modal from './components/Modal';\r\nimport styles from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  return (\r\n      <Container>\r\n        {showModal && <Modal onClose={toggleModal}>\r\n          <h1>Hello!</h1>\r\n          <p>This name already in contacts. Rewrite number?</p>\r\n          <button className={styles.modalButton} type=\"button\" onClick={toggleModal}>Close</button>\r\n        </Modal>}\r\n        <Section title=\"Phonebook\">\r\n        <Form onShowModal={toggleModal}/>\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <PhoneBook />\r\n        </Section>\r\n      </Container>\r\n    );\r\n}\r\n\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as contactActions from './contact-actions';\r\nimport { fetchContacts, addContact, deleteContact } from './contact-operations';\r\n\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, {payload}) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => {\r\n      return [payload, ...state];\r\n  },\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [contactActions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReduser from './contacts/contact-reduser';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const persistConfig = {\r\n//   key: 'contact',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactsReduser,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const storeObject = {\r\n//   store,\r\n//   persistor,\r\n// };\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={storeObject.persistor}> */}\r\n        <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1i8f0\",\"name\":\"Form_name__1dSgV\",\"input\":\"Form_input__2zOQZ\",\"button\":\"Form_button__871gv\"};"],"sourceRoot":""}